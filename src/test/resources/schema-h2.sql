-- Create the schema
CREATE SCHEMA IF NOT EXISTS auth_schema;

-- Set the schema for the current session
SET SCHEMA auth_schema;

-- Create tables with proper H2 syntax
CREATE TABLE IF NOT EXISTS auth_schema.users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    is_active BOOLEAN DEFAULT true,
    is_email_verified BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS auth_schema.roles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS auth_schema.user_roles (
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (user_id) REFERENCES auth_schema.users(id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES auth_schema.roles(id) ON DELETE CASCADE
);

-- Insert test roles if they don't exist
MERGE INTO auth_schema.roles (id, name, description) 
KEY(id) 
VALUES 
    (1, 'ROLE_USER', 'Regular user'),
    (2, 'ROLE_ADMIN', 'Administrator');
